swagger: '2.0'
info:
  version: v1
  title: addressTest
  description: This is sample API being generated by cedrus-api generator
  x-ibm-name: ''
host: $(catalog.host)
basePath: /api
schemes:
  - https
produces:
  - application/json
paths:
  /addresss/v1:
    get:
      tags:
        - Address
      description: Gets all addresss from the system that the user has access to
      operationId: getAddress
      produces:
        - application/json
      x-swagger-router-controller: Address
      responses:
        '200':
          description: address response
          schema:
            type: array
            items:
              $ref: '#/definitions/addresssv1'
        '404':
          description: address response
          schema:
            type: object
        '500':
          description: address response
          schema:
            type: object
      parameters:
        - name: pageSize
          in: query
          description: Number of records returned
          type: integer
        - name: pageNumber
          in: query
          description: Page number
          type: integer
definitions:
  ApiError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  addresssv1:
    type: object
    properties:
      country:
        type: string
      city:
        type: string
      street:
        type: string
    required:
      - country
      - city
      - street
responses:
  Standard500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/ApiError'
  PersonDoesNotExistResponse:
    description: Person does not exist.
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  gateway: datapower-gateway
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:8080'
  assembly:
    execute:
      - invoke:
          target-url: 'https://.mybluemix.net$(request.path)$(request.search)'
          tls-profile: ''
          secure-gateway: false
    catch: []
